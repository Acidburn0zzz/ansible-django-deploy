- name: Create a virtualenv (py3) for django
  command: "/usr/bin/python3 -m venv --system-site-packages {{ django_env }} creates={{ django_env }}"
  when: django_ispython3

- name: Create a virtualenv (py2) for django
  command: "virtualenv {{ django_env }} --system-site-packages creates={{ django_env }}"
  when: not django_ispython3

# Some pip versions (namely v8.1.1) have weird problems when handling some package upgrade
# scenarios. To avoid this, we ensure that we're always at the latest version.
- name: Ensure that we're using pip's latest version
  pip:
    name: pip
    state: latest
    virtualenv: "{{ django_env }}"

- name: Install django requirements
  command: "{{ django_env }}/bin/pip install -r {{ django_requirements_file }}"
  register: pip_install_result
  changed_when: "'Successfully installed' in pip_install_result.stdout"

- name: Create local_settings.py
  template: src=local_settings.py dest={{ django_path }}/local_settings.py
  register: local_settings_config

- name: Symlink local_settings.py into our venv's site-packages
  file:
    path: "{{ django_sitepackages_path }}/local_settings.py"
    state: link
    src: "{{ django_path }}/local_settings.py"

- name: Migrate
  django_manage:
    app_path: "{{ django_src_path }}"
    command: migrate
    virtualenv: "{{ django_env }}"

- name: Load fixtures
  django_manage:
    app_path: "{{ django_src_path }}"
    command: "loaddata {{ item }}"
    virtualenv: "{{ django_env }}"
  with_items: "{{ django_fixtures_to_load }}"

- name: Collect static
  django_manage:
    app_path: "{{ django_src_path }}"
    command: collectstatic
    # When we're in production, collected static files have a different access model then the
    # rest of the project, so we don't want to symlink it. However, when we're in development
    # mode, we prefer to be able to quickly see the result of our static files, so we want to
    # symlink it.
    link: "{{ django_debug }}"
    virtualenv: "{{ django_env }}"
  changed_when: false

- name: Fix static/media paths permissions
  file:
      path: "{{ item }}"
      state: directory
      group: "{{ django_files_group }}"
      recurse: yes
      mode: "u=rwX,g=rX,o=" # X != x, remember
  changed_when: false
  with_items:
    - "{{ django_static_path }}"
    - "{{ django_media_path }}"

- name: Trigger a reload if our virtualenv or local_settings was updated
  file:
    path: "{{ django_touch_reload_path }}"
    state: touch
  when: "django_touch_reload_path != '' and (pip_install_result|changed or local_settings_config|changed)"
